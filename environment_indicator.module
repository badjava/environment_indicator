<?php
// $Id$

/**
 * @file
 * Adds a coloured strip to the side of the site informing the user which
 * environemnt they are in (Development, Staging Production etc).
 *
 */

/**
 * Implementation of hook_help().
 */
function environment_indicator_help($path, $arg) {
  switch ($path) {
    case 'admin/settings/environment_indicator':
      return t('The environment indicator adds a coloured strip to the side of the site informing you which environemnt youe are currently in (Development, Staging Production etc). Use the settings below to customize the appearance of the indicator.');

    case 'admin/help#environment_indicator':
      $output = 'The environment indicator adds a coloured strip to the side of the site informing you which environemnt youe are currently in (Development, Staging Production etc). Use the settings below to customize the appearance of the indicator.';
      return $output;
  }
}

/**
 * Implementation of hook_perm().
 */
function environment_indicator_perm() {
  return array('access environment indicator');
}

/**
 * Implementation of hook_menu().
 */
function environment_indicator_menu() {
  $items['admin/settings/environment_indicator'] = array(
    'title' => 'Environment indicator',
    'description' => 'Adjust environment indicator menu settings.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('environment_indicator_settings'),
    'access arguments' => array('administer site configuration'),
  );
  return $items;
}

/**
 * Module settings form.
 */
function environment_indicator_settings() {
  $form['environment_indicator_position'] = array(
    '#type' => 'select',
    '#title' => t('Position'),
    '#description' => t('Choose a position for the environment indicator.'),
    '#options' => array(
      'left' => t('Left'),
      'right' => t('Right'),
    ),
    '#default_value' => variable_get('environment_indicator_position', 'left'),
  );

  $form['environment_indicator_margin'] = array(
    '#type' => 'checkbox',
    '#title' => t('Adjust margin'),
    '#default_value' => variable_get('environment_indicator_margin', 1),
    '#description' => t('If enabled, the site output is shifted to the left or right approximately 30 pixels to display the environment indicator. If disabled, some absolute- or fixed-positioned page elements may be covered by the environment indicator strip.'),
  );
  return system_settings_form($form);
}

/**
 * Implementation of hook_init().
 *
 * We can't move this into environment_indicator_footer(), because PHP-only based themes
 * like chameleon load and output scripts and stylesheets in front of
 * theme_closure(), so we ensure our styles and scripts are loaded on
 * all pages via hook_init().
 */
function environment_indicator_init() {
  if (!user_access('access environment indicator') || environment_indicator_suppress(FALSE)) {
    return;
  }

  global $user, $language;

  $path = drupal_get_path('module', 'environment_indicator');
  drupal_add_css($path .'/environment_indicator.css', 'module', 'all', FALSE);

  // Performance: Defer execution.
  drupal_add_js($path .'/environment_indicator.js', 'module', 'header', TRUE);

  if ($setting = variable_get('environment_indicator_margin', 1)) {
    $settings['margin'] = $setting;
  }
  if ($setting = variable_get('environment_indicator_position', 1)) {
    $settings['position'] = $setting;
  }
  if (!empty($GLOBALS['environment_indicator_text'])) {
    $settings['text'] = $GLOBALS['environment_indicator_text'];
  }
  if (!empty($GLOBALS['environment_indicator_color'])) {
    $settings['color'] = $GLOBALS['environment_indicator_color'];
  }
  if (empty($GLOBALS['environment_indicator_enabled'])) {
    environment_indicator_suppress(TRUE);
  }


  drupal_add_js(array('environment_indicator' => $settings), 'setting');
}

/**
 * Suppress display of administration menu.
 *
 * This function should be called from within another module's page callback
 * (preferably using module_invoke()) when the menu should not be displayed.
 * This is useful for modules that implement popup pages or other special
 * pages where the menu would be distracting or break the layout.
 *
 * @param $set
 *   Defaults to TRUE. If called before hook_footer, the menu will not be
 *   displayed. If FALSE is passed, the suppression state is returned.
 */
function environment_indicator_suppress($set = TRUE) {
  static $suppress = FALSE;
  // drupal_add_js() must only be invoked once.
  if (!empty($set) && $suppress === FALSE) {
    $suppress = TRUE;
    drupal_add_js(array('environment_indicator' => array('suppress' => 1)), 'setting');
  }
  return $suppress;
}
